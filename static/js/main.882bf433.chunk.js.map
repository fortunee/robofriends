{"version":3,"sources":["components/Card.js","components/CardList.js","components/Loading.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","contants.js","containers/App.js","actions.js","api.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","Loading","Scroll","children","style","overflowY","height","SearchBox","searchChange","aria-label","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","props","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","dispatch","useDispatch","useSelector","searchField","searchRobots","requestRobots","isPending","useEffect","a","fetch","then","res","json","data","payload","filteredRobots","filter","toLocaleLowerCase","includes","e","text","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobot","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882bf433.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => (\n  <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow shadow-5\">\n    <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"/>\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => (\n  <>\n    {robots.map((robot) => (\n      <Card\n        key={robot.id}\n        id={robot.id}\n        name={robot.name}\n        email={robot.email}\n      />\n    ))}\n  </>\n);\n\nexport default CardList;\n","const Loading = () => (\n  <div className=\"vh-100 dt w-100\">\n    <h1 className=\"tc f1 dtc v-mid\">Loading...</h1>\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\n\nconst Scroll = ({ children }) => (\n  <div style={{ overflowY: 'scroll', height: '80vh'}}>\n    {children}\n  </div>\n)\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => (\n  <div className=\"pa2\">\n    <input\n      aria-label=\"Search Robos\"\n      type=\"search\"\n      className=\"pa3 ba b--green\"\n      placeholder=\"Search robo friends\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.hasError ? (\n          <h1>Oops!!! Something went wrong please reload the page</h1>\n        ) : (\n          this.props.children\n        )}\n      </>\n    );\n  }\n}\n\nexport default ErrorBoundary;\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  CardList,\n  ErrorBoundary,\n  Loading,\n  SearchBox,\n  Scroll,\n} from '../components';\n\nimport { requestRobots, setSearchField } from '../actions';\n\nimport './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { searchField, robots, isPending } = useSelector((state) => ({\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n  }));\n\n  useEffect(() => {\n    dispatch(requestRobots());\n  }, [dispatch]);\n\n  const onSearchChange = (e) => dispatch(setSearchField(e.target.value));\n\n  const filteredRobots = robots.filter((robot) =>\n    robot.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n  );\n\n  return isPending ? (\n    <Loading />\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">Robo friends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundary>\n          <CardList robots={filteredRobots} />\n        </ErrorBoundary>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","import { apiGetReq } from './api';\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './contants';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => async (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  try {\n    const data = await apiGetReq('https://jsonplaceholder.typicode.com/users');\n    dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error });\n  }\n};\n","export const apiGetReq = (url) => fetch(url).then((res) => res.json());\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './contants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nconst initialStateRobot = {\n  isPending: false,\n  robots: [],\n  error: '',\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nexport const requestRobots = (state = initialStateRobot, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        isPending: false,\n        robots: action.payload,\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst logger = createLogger();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}