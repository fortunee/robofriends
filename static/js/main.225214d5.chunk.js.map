{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Loading.js","components/Scroll.js","containers/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","searchChange","type","placeholder","onChange","Loading","Scroll","children","style","overflowY","height","ErrorBoundary","state","hasError","error","info","this","setState","props","Component","App","onSearchChange","e","searchField","target","value","fetch","then","res","json","filteredRobots","filter","r","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAYeA,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACX,sBAAKC,UAAU,iDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACE,6BAAKJ,IACL,4BAAIC,WCSKI,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,mCACGA,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEET,GAAIS,EAAMT,GACVC,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OAHRO,EAAMT,UCMJU,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,qBAAKR,UAAU,MAAf,SACE,uBACES,KAAK,SACLT,UAAU,kBACVU,YAAY,sBACZC,SAAUH,OCFDI,EANC,kBACd,qBAAKZ,UAAU,kBAAf,SACE,oBAAIA,UAAU,kBAAd,2BCMWa,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,QAA3C,SACGH,KCuBUI,E,kDAxBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,8DAOIC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OACE,mCACGG,KAAKJ,MAAMC,SACV,qFAEAG,KAAKE,MAAMX,e,GAlBOY,aCiDbC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAAEM,YAAaD,EAAEE,OAAOC,SAbtC,EAAKb,MAAQ,CACXf,OAAQ,GACR0B,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9B,GAAD,OAAY,EAAKoB,SAAS,CAAEpB,gB,+BAO5B,IAAD,EACyBmB,KAAKJ,MAA7Bf,EADD,EACCA,OAAQ0B,EADT,EACSA,YAEVO,EAAiBjC,EAAOkC,QAAO,SAACC,GAAD,OACnCA,EAAEzC,KAAK0C,oBAAoBC,SAASX,EAAYU,wBAGlD,OAAQpC,EAAOsC,OAGb,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWQ,aAAce,KAAKK,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQiC,WAPxB,cAAC,EAAD,Q,GA3BYX,cCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.225214d5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => (\n  <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow shadow-5\">\n    <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => (\n  <>\n    {robots.map((robot) => (\n      <Card\n        key={robot.id}\n        id={robot.id}\n        name={robot.name}\n        email={robot.email}\n      />\n    ))}\n  </>\n);\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => (\n  <div className=\"pa2\">\n    <input\n      type=\"search\"\n      className=\"pa3 ba b--green\"\n      placeholder=\"Search robo friends\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nexport default SearchBox;\n","const Loading = () => (\n  <div className=\"vh-100 dt w-100\">\n    <h1 className=\"tc f1 dtc v-mid\">Loading...</h1>\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\n\nconst Scroll = ({ children }) => (\n  <div style={{ overflowY: 'scroll', height: '80vh'}}>\n    {children}\n  </div>\n)\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.hasError ? (\n          <h1>Oops!!! Something went wrong please reload the page</h1>\n        ) : (\n          this.props.children\n        )}\n      </>\n    );\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Loading from '../components/Loading';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from './ErrorBoundary';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((robots) => this.setState({ robots }));\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n\n    const filteredRobots = robots.filter((r) =>\n      r.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return !robots.length ? (\n      <Loading />\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">Robo friends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}